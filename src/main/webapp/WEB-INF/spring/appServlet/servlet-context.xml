<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
        
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/**" location="/" />
	<!-- <resources mapping="/resources/**" location="/resources/" /> -->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:order="1">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.seed.study" use-default-filters="false"> 
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" /> 
    </context:component-scan>
    
    <beans:bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<beans:property name="basenames">
			<beans:list>
				<beans:value>application</beans:value> <!-- /src/main/resources/application.properties -->
			</beans:list>
		</beans:property>
		<beans:property name="defaultEncoding" value="UTF-8"/>
	</beans:bean>
<!-- 	<mvc:interceptors> -->
<!--         <mvc:interceptor> -->
<!--             <mvc:mapping path="/**"/> -->
<!--             <beans:bean id="loggerInterceptor" class="com.seed.study.common.LoggerInterceptor"></beans:bean> -->
<!--         </mvc:interceptor> -->
<!--     </mvc:interceptors> -->
	<!-- Nexacro N uiadapter 연동 작업 -->
   <beans:bean id="nexacroInterceptor" class="com.nexacro.uiadapter.spring.core.servlet.NexacroInterceptor"/>
   <beans:bean id="nexacroFileView" class="com.nexacro.uiadapter.spring.core.view.NexacroFileView" />
   <beans:bean id="nexacroView" class="com.nexacro.uiadapter.spring.core.view.NexacroView">
        <beans:property name="defaultContentType" value="PlatformXml" />
        <beans:property name="defaultCharset" value="UTF-8" />
   </beans:bean>

    <!-- 넥사크로N RequestMappingHandlerAdapter 구현체 등록 -->
    <!-- 넥사크로플랫폼 의 입/출력 데이터 변환을 수행하기 위해 Spring의 RequestMappingHandlerAdapter의 확장된 형태.  java.util.Map의 데이터 변환을 제공  -->
    <beans:bean class="com.nexacro.uiadapter.spring.core.resolve.NexacroRequestMappingHandlerAdapter" p:order="0">
        <beans:property name="customArgumentResolvers">
          <!-- 개발자가 작성하게 되는 Controller의 입력 파라미터 중 넥사크로플랫폼 의 데이터 변환을 수행   Ex> DataSet -> java bean -->
          <beans:list>
               <beans:bean class="com.nexacro.uiadapter.spring.core.resolve.NexacroMethodArgumentResolver" />
          </beans:list>
        </beans:property>
        <beans:property name="customReturnValueHandlers">
            <beans:list>
              <!-- Controller에서 반환 되는 값을 넥사크로플랫폼 의 데이터로 변환   Ex> java bean -> Dataset -->
                <beans:bean class="com.nexacro.uiadapter.spring.core.resolve.NexacroHandlerMethodReturnValueHandler">
                  <!-- 넥사크로플랫폼 으로 데이터 송신 역할을 수행합니다  -->
                    <beans:property name="view" ref="nexacroView" />
                    <!-- 넥사크로플랫폼 으로 File 데이터에 대한 송신 역할을 수행  -->
                    <beans:property name="fileView" ref="nexacroFileView" />
                </beans:bean>
            </beans:list>
        </beans:property>
    </beans:bean>
</beans:beans>
